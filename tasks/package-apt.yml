---

- name: Check that HTTPS transport is available to APT
  apt: name="apt-transport-https" state=present
  when: package_apt_repo_https | bool

- name: Package APT - Install sources.list
  template:
    src: "sources.list.j2"
    dest: "/etc/apt/sources.list"
    owner: root
    group: root
    mode: 0644
  notify: APT Update cache

- name: Package APT - Install backports.list
  template:
    src: "backports.list.j2"
    dest: "{{ package_apt_repo_path }}/backports.list"
    owner: root
    group: root
    mode: 0644
  notify: APT Update cache
  when:
    - package_apt_repo_backports | bool
    - ansible_distribution == 'Debian'

- name: Package APT - Install experimental.list
  template:
    src: "experimental.list.j2"
    dest: "{{ package_apt_repo_path }}/experimental.list"
    owner: root
    group: root
    mode: 0644
  notify: APT Update cache
  when:
    - package_apt_repo_experimental | bool
    - ansible_distribution == 'Debian'

- name: packages APT - Custom repos
  when: package_apt_repo_custom | length > 0
  block:

    - name: Package APT - Install Custom repo key
      apt_key:
        url: "{{ item.key }}"
        state: "present"
      when: item.state | default(package_state)
      with_items: "{{ package_apt_repo_custom }}"
      loop_control:
        label: "{{ item.key }}"

    - name: Package APT - Install Custom repo file
      template:
        src: "custom.list.j2"
        dest: "{{ package_apt_repo_path }}/{{ item.filename | default(item.name) }}.list"
        owner: root
        group: root
        mode: 0644
      notify: APT Update cache
      with_items: "{{ package_apt_repo_custom }}"
      when: item.state != 'absent'
      loop_control:
        label: "{{ package_apt_repo_path }}/{{ item.filename | default(item.name) }}.list"

    - name: Package APT - Check if repo file exists
      stat:
        path: "{{ package_apt_repo_path }}/{{ item.filename | default(item.name) }}.list"
      register: result
      with_items: "{{ package_apt_repo_custom }}"
      when: item.state == 'absent'
      loop_control:
        label: "{{ package_apt_repo_path }}/{{ item.filename | default(item.name) }}.list"

    - name: Package APT - Remove Custom repo file
      file:
        path: "{{ item.stat.path }}"
        state: absent
      notify: APT Update cache
      with_items: "{{ result.results }}"
      when:
        - item.item.state == 'absent'
        - item.stat.exists | bool
      loop_control:
        label: "{{ package_apt_repo_path }}/{{ item.item.filename | default(item.item.name) }}.list"

- name: Package APT - Run Handlers
  meta: flush_handlers

- name: Package APT - Install packages
  apt:
    name: "{{ package_list_install.apt }}"
    state: present
    update_cache: "{{ package_update_cache }}"
    cache_valid_time: "{{ package_cache_valid_time }}"

- name: Package APT - Remove packages
  apt:
    name: "{{ package_list_remove.apt }}"
    state: absent
    update_cache: "{{ package_update_cache }}"
    cache_valid_time: "{{ package_cache_valid_time }}"
